name: Release

on:
  push:
    branches:
      - master
      - alpha

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      HUSKY: 0
    steps:
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: | # uses partial matches
            ${{ runner.os }}-yarn-

      - uses: actions/checkout@v2

      - name: Install
        run: yarn --check-files --frozen-lockfile --non-interactive

      # build is handled by `prepublishOnly`
      - name: Release
        run: yarn semantic-release

      - name: Get latest version tag
        id: version-tag
        run: echo "::set-output name=latest-version::$(git describe --tags $(git rev-list --tags='v[0-9].[0-9]*' --max-count=1))"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: schedio-tokens@${{ steps.version-tag.outputs.latest-version }}
          path: dist/
