@mixin font-size($size) {
  font-size: map-get(nth($sizes, $size), 'size');
  letter-spacing: map-get(nth($sizes, $size), 'tracking');
  line-height: map-get(nth($sizes, $size), 'leading');
}

/// Returns the font-weight value for a given weight.
///
/// @param {String} $weight - The key for the given weight.
/// @return {Number} The font-weight for the weight.
@function font-weight($weight) {
  $fetched-value: map-get($font-weight-data, $weight);

  @if type-of($fetched-value) == number {
    @return $fetched-value;
  } @else {
    @error 'Font weight weight `#{$weight}` not found. Available weights: #{available-names($spacing-data)}';
  }
}

$size-1: (
  'size': $font-size-1,
  'leading': $line-height-large-text,
  'tracking': 0.125rem,
  'weight': font-weight('light')
);

$size-2: (
  'size': $font-size-2,
  'leading': $line-height-large-text,
  'tracking': 0.125rem,
  'weight': font-weight('light')
);

$size-3: (
  'size': $font-size-3,
  'leading': $line-height-base,
  'tracking': normal,
  'weight': font-weight('light')
);

$size-4: (
  'size': $font-size-4,
  'leading': $line-height-base,
  'tracking': normal,
  'weight': font-weight('regular')
);

$size-5: (
  'size': $font-size-5,
  'leading': $line-height-base,
  'tracking': normal,
  'weight': font-weight('regular')
);

$size-6: (
  'size': $font-size-6,
  'leading': $line-height-base,
  'tracking': normal,
  'weight': font-weight('regular')
);

$size-7: (
  'size': $font-size-7,
  'leading': $line-height-base,
  'tracking': normal,
  'weight': font-weight('regular')
);

$sizes: ($size-1, $size-2, $size-3, $size-4, $size-5, $size-6, $size-7);

$text-alignments: (left, right, center, justify);
